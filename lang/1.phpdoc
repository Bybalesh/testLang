(function (Prism) {

	var typeExpression = /(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;

	Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {
		'parameter': {
			pattern: RegExp('(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:' + typeExpression + '\\s+)?)\\$\\w+'),
			lookbehind: true
		}
	});
<?php
/**
 * Класс для работы с пользователями.
 *
 * @author Иван Иванов <ivan@example.com>
 * @version 1.0
 */
class User
{
    /**
     * Имя пользователя.
     *
     * @var string
     */
    private $name;

    /**
     * Конструктор класса.
     *
     * @param string $name Имя пользователя.
     */
    public function __construct(string $name)
    {
        $this->name = $name;
    }

    /**
     * Возвращает имя пользователя.
     *
     * @return string Имя пользователя.
     */
    public function getName(): string
    {
        return $this->name;
    }
}
?>

	Prism.languages.insertBefore('phpdoc', 'keyword', {
		'class-name': [
			{
				pattern: RegExp('(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)' + typeExpression),
				lookbehind: true,
				inside: {
					'keyword': /\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,
					'punctuation': /[|\\[\]()]/
				}
			}
		],
	});

	Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc);

}(Prism));
